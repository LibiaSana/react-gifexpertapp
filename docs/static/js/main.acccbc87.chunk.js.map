{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifts.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","PropType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OAEI,0BAAMC,SAdW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACjCR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAUR,2BACAO,KAAK,OACLC,MAAST,EACTU,SAtBoB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,YA0B/BZ,EAAYe,SAAW,CACnBd,c,OAAee,EAAUC,KAAKC,Y,2BCnCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEPC,QAAQC,IAAIF,GAENG,EAAOH,EAAKI,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAZtB,kBAgBbQ,GAhBa,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IAEpC,OADAM,QAAQC,IAAI,CAACI,KAAIC,QAAOZ,QAEpB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAMjB,EAAKkB,IAAKN,IACjB,2BAAIA,KCFPO,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAa,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAyBtC,OAlBAC,qBAAW,WACJ1B,EAAWC,GACT0B,MAAK,SAAAC,GAGdH,EAAS,CACLjB,KAAMoB,EACNL,SAAQ,SAOL,CAACtB,IAIDuB,EDrBsBK,CAAe5B,GAAhCe,EAFuB,EAE5BR,KAAae,EAFe,EAEfA,QAMpB,OAJAd,QAAQC,IAAIa,GAKR,oCACA,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAY,uBAAGJ,UAAU,oCAAb,cAEb,yBAAKA,UAAU,aAGHH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEpBfkB,EAAe,WAAM,MAEMhD,mBAAS,CAAC,cAFhB,mBAEvBiD,EAFuB,KAEXlD,EAFW,KAQ9B,OADJ2B,QAAQC,IAAIsB,GAEJ,6BACE,8CACA,kBAAC,EAAD,CAAalD,cAAeA,IAC5B,6BAEA,4BAEAkD,EAAWpB,KAAI,SAAAX,GAAQ,OACnB,kBAAC,EAAD,CACE6B,IAAK7B,EACLA,SAAUA,U,MChB1BgC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.acccbc87.chunk.js","sourcesContent":["//rafc tab for import and create constant\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue]= useState('');//undefined\r\n\r\n    const handleInputChange = (e) => {\r\n   \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length >2){\r\n    setCategories(cats => [inputValue, ...cats]);\r\n    setInputValue('');\r\n}\r\n\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n       \r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n          type=\"text\" \r\n          value = {inputValue}\r\n          onChange={handleInputChange}\r\n          />  \r\n          </form>\r\n        \r\n    )\r\n}\r\nAddCategory.PropType = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category )=> {\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=I8Dsn0fkxlDDgvwqH45AMfPSwNJTnO2p`;\r\n\r\n   const resp = await fetch(url);\r\n   const {data} = await resp.json();\r\n   \r\n   console.log(data);\r\n\r\n   const gifs = data.map(img => {\r\n       return {\r\n           id: img.id,\r\n           title: img.title,\r\n           url: img.images?.downsized_medium.url\r\n       }\r\n   })\r\n   \r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src ={url} alt={title}/>\r\n                <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifts'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading}=useFetchGifts( category );\r\n   \r\n    console.log(loading);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading  && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n     \r\n        <div className=\"card-grid\">\r\n          \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts =( category )=>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( ()=>{\r\n           getGifs  ( category )\r\n            .then(imgs =>{\r\n\r\n\r\n    setstate({\r\n        data: imgs,\r\n        loading:false\r\n\r\n});\r\n\r\n\r\n               \r\n        });\r\n        }, [category])\r\n\r\n    \r\n\r\n    return state;// data: [],loading: true\r\n    \r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One punch', 'Samurai X', 'DragonBall'];\r\n    const [categories, setCategories] = useState(['One punch'])\r\n    //const handleAdd = ()=> {\r\n    //setCategories([...categories, 'HunterXHunter']);\r\n    //}\r\n\r\nconsole.log(categories);\r\n    return (\r\n        <div>\r\n          <h2> GifExpertApp </h2>  \r\n          <AddCategory setCategories={setCategories}/>    \r\n          <hr/>\r\n         \r\n          <ol>\r\n          {\r\n          categories.map(category => \r\n             (<GifGrid \r\n                key={category}\r\n                category={category}/>)\r\n          )\r\n          }\r\n          </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}